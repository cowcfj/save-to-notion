name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test:ci
    
    - name: Generate coverage report
      run: npm run test:coverage
      continue-on-error: true

    - name: Upload test report artifact (junit.xml)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-report
        path: junit.xml
        if-no-files-found: ignore

    - name: Upload HTML coverage artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: coverage
        if-no-files-found: ignore

    - name: Coverage diagnostics (list files + head)
      run: |
        echo "-- coverage dir listing --"
        ls -la coverage || true
        echo "\n-- head of coverage/lcov.info (if exists) --"
        if [ -f coverage/lcov.info ]; then
          head -n 60 coverage/lcov.info
        else
          echo "coverage/lcov.info not found"
        fi
      continue-on-error: true
    
    - name: Upload coverage to Codecov (Optional)
      continue-on-error: true
      id: codecov_upload
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x' && hashFiles('coverage/lcov.info') != ''
      with:
        use_oidc: true
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    
    - name: Report success
      if: success()
      run: echo "✅ All tests passed for Node.js ${{ matrix.node-version }}"

    - name: Report Codecov upload step info
      if: always()
      run: |
        echo "--- Codecov step outcome ---"
        echo "Outcome: ${{ steps.codecov_upload.outcome }}"
        echo "Conclusion: ${{ steps.codecov_upload.conclusion }}"
        echo "Outputs: ${{ toJson(steps.codecov_upload.outputs) }}"

    - name: Report cancelled
      if: cancelled()
      run: echo "⏹️ Tests cancelled for Node.js ${{ matrix.node-version }}"

    # 不需要手動失敗步驟，讓失敗留給實際出錯的步驟
