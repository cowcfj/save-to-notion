name: Setup Branch Protection

on:
  workflow_dispatch:  # 手動觸發
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/branch-protection.yml'

jobs:
  setup-branch-protection:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Setup Branch Protection Rules
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // 設置 main 分支保護規則
          try {
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: [
                  'test (18.x)',
                  'test (20.x)',
                  'codecov/project',
                  'codecov/patch'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 0,  // 個人項目可設為 0
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false
              },
              restrictions: null,
              required_conversation_resolution: true,
              allow_force_pushes: false,
              allow_deletions: false
            });
            
            console.log('✅ Main branch protection rules updated successfully');
          } catch (error) {
            console.error('❌ Failed to update main branch protection:', error.message);
          }
          
          // 設置 develop 分支保護規則（如果存在）
          try {
            await github.rest.repos.getBranch({
              owner,
              repo,
              branch: 'develop'
            });
            
            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'develop',
              required_status_checks: {
                strict: true,
                contexts: [
                  'test (18.x)',
                  'test (20.x)',
                  'codecov/project',
                  'codecov/patch'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 0,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false
              },
              restrictions: null,
              required_conversation_resolution: true,
              allow_force_pushes: false,
              allow_deletions: false
            });
            
            console.log('✅ Develop branch protection rules updated successfully');
          } catch (error) {
            if (error.status === 404) {
              console.log('ℹ️ Develop branch does not exist, skipping protection setup');
            } else {
              console.error('❌ Failed to update develop branch protection:', error.message);
            }
          }
          
          // 啟用自動合併功能
          try {
            await github.rest.repos.update({
              owner,
              repo,
              allow_auto_merge: true,
              delete_branch_on_merge: true  // 合併後自動刪除分支
            });
            
            console.log('✅ Auto-merge and branch cleanup enabled');
          } catch (error) {
            console.error('❌ Failed to enable auto-merge:', error.message);
          }