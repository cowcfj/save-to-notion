name: Tests with E2E Coverage

on:
  push:
    branches: [ main, develop, test/improve-coverage ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # ============================================
    # Ê≠•È©ü 1: Jest ÂñÆÂÖÉÊ∏¨Ë©¶ + Ë¶ÜËìãÁéá
    # ============================================
    - name: Run Jest unit tests with coverage
      run: npm run test:coverage

    # ‰øùÁïô Jest Ë¶ÜËìãÁéáÊñá‰ª∂‰æõÂæåÁ∫åÂêà‰Ωµ‰ΩøÁî®
    - name: Preserve Jest coverage for merging
      if: always()
      run: |
        mkdir -p coverage-backup
        cp -r coverage/* coverage-backup/ || true
        ls -la coverage-backup/

    - name: Upload Jest coverage artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jest-coverage
        path: coverage
        if-no-files-found: warn

    # ============================================
    # Ê≠•È©ü 2: E2E Ê∏¨Ë©¶ + Puppeteer Ë¶ÜËìãÁéá
    # ============================================
    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          libgbm1 \
          libasound2t64 \
          libatk1.0-0t64 \
          libatk-bridge2.0-0t64 \
          libcups2t64 \
          libdbus-1-3 \
          libdrm2 \
          libgtk-3-0t64 \
          libnspr4 \
          libnss3 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxrandr2 \
          xdg-utils

    - name: Run E2E tests with Puppeteer coverage
      run: npm run test:e2e
      env:
        PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
      continue-on-error: true

    - name: Upload E2E coverage artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-coverage
        path: coverage/e2e
        if-no-files-found: warn

    # ============================================
    # Ê≠•È©ü 3: Âêà‰ΩµË¶ÜËìãÁéáÂ†±Âëä
    # ============================================
    - name: Restore Jest coverage for merging
      if: always()
      run: |
        if [ -d coverage-backup ]; then
          echo "üì¶ ÊÅ¢Âæ© Jest Ë¶ÜËìãÁéáÊñá‰ª∂..."
          cp -r coverage-backup/* coverage/ || true
          ls -la coverage/
        fi

    - name: Merge coverage reports
      if: always()
      run: npm run test:merge-coverage
      continue-on-error: true

    - name: Upload merged coverage artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: merged-coverage
        path: coverage/merged
        if-no-files-found: warn

    - name: Upload LCOV coverage for Codecov
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-lcov
        path: coverage/merged/lcov.info
        if-no-files-found: warn

    # ============================================
    # Ë®∫Êñ∑ÂíåÂ†±Âëä
    # ============================================
    - name: Coverage diagnostics
      if: always()
      run: |
        echo "================================"
        echo "üìä Coverage Reports Structure"
        echo "================================"

        echo -e "\nüìÅ Jest Coverage:"
        if [ -d coverage ]; then
          ls -lah coverage/ | head -20
          if [ -f coverage/coverage-summary.json ]; then
            echo -e "\nüìä Jest Summary:"
            cat coverage/coverage-summary.json | head -30
          fi
        else
          echo "‚ùå No Jest coverage directory"
        fi

        echo -e "\nüìÅ E2E Coverage:"
        if [ -d coverage/e2e ]; then
          ls -lah coverage/e2e/
          if [ -f coverage/e2e/coverage-summary.json ]; then
            echo -e "\nüìä E2E Summary:"
            cat coverage/e2e/coverage-summary.json
          fi
        else
          echo "‚ö†Ô∏è No E2E coverage directory"
        fi

        echo -e "\nüìÅ Merged Coverage:"
        if [ -d coverage/merged ]; then
          ls -lah coverage/merged/
          if [ -f coverage/merged/lcov.info ]; then
            echo -e "\n‚úÖ Merged LCOV exists:"
            wc -l coverage/merged/lcov.info
            head -n 50 coverage/merged/lcov.info
          fi
        else
          echo "‚ö†Ô∏è No merged coverage directory"
        fi
      continue-on-error: true

    - name: Display coverage summary
      if: always()
      run: |
        echo "================================"
        echo "üìà Coverage Summary"
        echo "================================"

        if [ -f coverage/coverage-final.json ]; then
          echo "‚úÖ Jest coverage collected"
        else
          echo "‚ö†Ô∏è No Jest coverage"
        fi

        if [ -f coverage/e2e/coverage-final.json ]; then
          echo "‚úÖ E2E coverage collected"
        else
          echo "‚ö†Ô∏è No E2E coverage"
        fi

        if [ -f coverage/merged/coverage-final.json ]; then
          echo "‚úÖ Merged coverage available"

          # ÂòóË©¶ÊèêÂèñË¶ÜËìãÁéáÁôæÂàÜÊØîÔºàÂ¶ÇÊûúÊúâ summaryÔºâ
          if command -v jq &> /dev/null && [ -f coverage/merged/coverage-summary.json ]; then
            echo -e "\nüìä Coverage Percentages:"
            jq '.total | {statements: .statements.pct, branches: .branches.pct, functions: .functions.pct, lines: .lines.pct}' coverage/merged/coverage-summary.json
          fi
        else
          echo "‚ö†Ô∏è No merged coverage"
        fi
      continue-on-error: true

    - name: Upload test report (junit.xml)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: junit-report
        path: junit.xml
        if-no-files-found: ignore

    - name: Report success
      if: success()
      run: echo "‚úÖ All tests passed for Node.js ${{ matrix.node-version }}"

    - name: Report failure
      if: failure()
      run: |
        echo "‚ùå Tests failed for Node.js ${{ matrix.node-version }}"
        echo "Please check the artifacts for detailed coverage reports"

    - name: Report cancelled
      if: cancelled()
      run: echo "‚èπÔ∏è Tests cancelled for Node.js ${{ matrix.node-version }}"
